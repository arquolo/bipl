[metadata]
name = glow
version = 0.11.3
url = https://github.com/arquolo/glow
author = Paul Maevskikh
author_email = arquolo@gmail.com
description = Toolset for model training and creation of pipelines
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
classifiers =
    Development Status :: 3 - Alpha
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
platforms = OS Independent

[options]
zip_safe = False
packages = find:
python_requires = >=3.9
setup_requires =
    tqdm
install_requires =
    loky>=3.1
    lxml
    numpy~=1.21
    tqdm
    wrapt
dependency_links =
    https://download.pytorch.org/whl/cu116/torch
    https://download.pytorch.org/whl/cu116/torchvision
    https://github.com/NVIDIA/Torch-TensorRT/releases

[options.extras_require]
memprof =
    psutil
cv =
    opencv-python~=4.0
    scipy
cv-dither =
    %(cv)s
    numba  # transforms.functional.dither
io =
    %(cv)s
    imagecodecs
    sounddevice
    soundfile
nn =
    graphviz  # nn.plot_model, requires graphviz binaries
    einops
    pynvml~=11.4
    torch~=1.12
    torchvision~=0.12
    torch-tensorrt~=1.0;platform_system=='Linux'
all =
    %(cv)s
    %(io)s
    %(nn)s
    matplotlib
_dev =
    flake8~=5.0.4
    flake8-builtins
    flake8-logging-format
    flake8-pie
    flake8-pyi
    flake8-pytest
    flake8-pytest-style
    flake8-return
    flake8-simplify
    isort
    mypy~=0.990
    pytest~=6.0
    yapf~=0.29,!=0.30,!=0.31,!=0.32
dev =
    %(_dev)s
    flake8-alphabetize
    flake8-bugbear
    flake8-comprehensions
    flake8-eradicate
    flake8-isort
    flake8-quotes
    flake8-scream
    flake8-string-format
    flake8-use-pathlib
    pep8-naming
    typing-extensions~=4.4
dev-wemake =
    %(_dev)s
    flake8-blind-except
    wemake-python-styleguide~=0.15.0

[options.packages.find]
exclude =
    glow.examples
    glow.test

[flake8]
ignore =
    AZ100,  ; alphabetize: Import statements are in the wrong order - conflict with isort
    AZ200,  ; alphabetize: Imported names are in the wrong order - conflict with isort
    AZ300,  ; alphabetize: Import statements should be combined - conflict with isort
    A003   ; builtins
    C812,C815,C818 ; commas
    D1,D2,D4 ; docstrings
    DAR    ; darglint
    E800   ; eradicate
    I004   ; isort
    N812   ; pep8
    P101,P103 ; string-format
    PIE783,PIE784,PIE785,PIE808 ; pie
    PT011  ; pytest
    R504   ; return
    RST    ; rst-docstrings
    S1,S3,S4 ; bandit
    SIM105,SIM106,SIM119 ; simplify
    W503,W504 ; pycodestyle
    WPS1,  ; wemake: Naming
    WPS2   ; wemake: Complexity
    WPS300,WPS301,WPS303,WPS304,WPS305,WPS306,WPS309,WPS314,WPS316,WPS317,WPS318,WPS319,WPS326,WPS330,WPS331,WPS332,WPS335,WPS336,WPS337,WPS338,WPS339,WPS347,WPS349,WPS352,WPS356,WPS358,WPS359,WPS361,WPS362 ; wemake: Consistency
    WPS407,WPS410,WPS412,WPS414,WPS420,WPS421,WPS424,WPS425,WPS428,WPS429,WPS430,WPS431,WPS432,WPS433,WPS434,WPS435,WPS436,WPS437,WPS440,WPS441,WPS442,WPS444,WPS450,WPS451,WPS457,WPS458,WPS459,WPS460,WPS461,WPS465 ; wemake: Best practices
    WPS501,WPS503,WPS509,WPS526,WPS527,WPS529 ; wemake: Refactoring
    WPS600,WPS601,WPS602,WPS603,WPS604,WPS609 ; wemake: OOP

exclude = .eggs,.git,__pycache__,build,dist
max-complexity = 10

[mypy]
sqlite_cache = True
check_untyped_defs = True
ignore_missing_imports = True
no_implicit_optional = True
show_error_codes = True
warn_unused_ignores = True
plugins =
    numpy.typing.mypy_plugin

[yapf]
based_on_style = facebook

align_closing_bracket_with_visual_indent = True
allow_multiline_dictionary_keys = True
coalesce_brackets = True
column_limit = 79
dedent_closing_brackets = False
spaces_around_power_operator = True

split_arguments_when_comma_terminated = True
split_before_arithmetic_operator = True
split_before_bitwise_operator = True
split_before_dict_set_generator = False
split_before_logical_operator = True
split_before_dot = True
split_before_expression_after_opening_paren = True
